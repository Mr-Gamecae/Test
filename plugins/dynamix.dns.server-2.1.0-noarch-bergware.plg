<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plugin "dynamix.dns.server">
<!ENTITY version "2.1.0">
<!ENTITY pkg "/boot/packages">
<!ENTITY rom "/boot/config/plugins/dynamix">
<!ENTITY img "/boot/config/plugins/images">
<!ENTITY gui "/usr/local/emhttp/plugins">
<!ENTITY log "/var/log/packages">
<!ENTITY reg "/var/log/plugins">
<!ENTITY src "https://raw.github.com/bergware/dynamix/master/download">
]>

<PLUGIN>
<!--
Copyright 2014, Bergware International
Dynamix DNS Server - DNSmasq v2.57 for local host name resolving

Version history:
 2014-01-23 - version 2.1.0 : unRAID v5/v6 alignment
 2013-12-21 - version 2.0.1 : Public release
 2013-12-01 - version 2.0.0 : Initial release

Plugin file locations:
 /boot/config/plugins/dynamix.dns.server-0.0.0-noarch-bergware.plg        # this file
 /boot/config/plugins/dynamix/dynamix.dns.server-0.0.0-i486-1.txz         # executable code
 /boot/config/plugins/images/dynamix.dns.server.png                       # icon file
 /boot/config/plugins/dynamix/dynamix.dns.server.cfg                      # non-volatile settings
 /var/log/plugins/dynamix.dns.server                                      # plugin registration

 /etc/rc.d/rc.dnsmasq                                                     # control script
 /etc/dnsmasq.conf                                                        # dns server settings
 /etc/hosts.dnsmasq                                                       # local hosts addresses
-->

<FILE Name="/tmp/plugin-startup" Run="/bin/bash">
<INLINE>
if [ -f /var/log/plugins/dynamix.webGui ]; then
# Prepare plugin
  rm -f $(ls &rom;/&plugin;*.t[xg]z 2>/dev/null | grep -v '&version;')
  rm -f &reg;/&plugin;
  rm -f /tmp/plugin-install
  rm -f /etc/rc.d/rc.dnsmasq
# Stop service
  process=/usr/local/sbin/dnsmasq
  pid=$(pidof -s -x $process)
  if [ -n "$pid" ]; then
    pkill -f $process 1>/dev/null 2>&amp;1
  fi
# Proceed
  code=0
else
# Dynamix webGui not present
  echo "missing Dynamix webGui plugin !!!"
# Terminate
  code=1
fi
# Remove this script
rm -f /tmp/plugin-startup
exit $code
</INLINE>
</FILE>

<FILE Name="&rom;/&plugin;.cfg">
<INLINE>
service="0"
domain=""
local="1"
server=""
host=""
</INLINE>
</FILE>

<FILE Name="&rom;/&plugin;-&version;-i486-1.txz" Run="upgradepkg --install-new">
<URL>--no-check-certificate &src;/&plugin;-&version;-i486-1.txz</URL>
</FILE>

<FILE Name="&img;/&plugin;.png">
<URL>--no-check-certificate &src;/&plugin;.png</URL>
</FILE>

<FILE Name="&gui;/dynamix/images/&plugin;.png">
<LOCAL>&img;/&plugin;.png</LOCAL>
</FILE>

<FILE Name="/etc/rc.d/rc.dnsmasq" Mode="0770">
<INLINE>
#!/bin/sh
program="dnsmasq"
execute="/usr/sbin/$program"
options="-C /etc/dnsmasq.conf"
pid=$(pidof -s -x $execute)

case "$1" in
'start')
  if [ -z "$pid" ]; then
    $execute $options 1>/dev/null 2>&amp;1
    echo "$program started"
  else
    echo "$program already running!"
  fi
;;
'stop')
  if [ -n "$pid" ]; then
    pkill -f $execute 1>/dev/null 2>&amp;1
    timer=5
    until [ -z "$(pidof -s -x $execute)" ] || [ $timer -eq 0 ]; do
      timer=$((timer-1))
      sleep 1
    done
    echo "$program stopped"
  else
    echo "$program not running!"
  fi
;;
*)
  echo "Usage: $(basename $0) start|stop"
esac
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-install" Run="/bin/bash">
<INLINE>
cfg="&rom;/&plugin;.cfg"
echo "executing !"

# Create library links
rm -rf /usr/lib/libidn.so.11
ln -sf /usr/lib/libidn.so.11.6.8 /usr/lib/libidn.so.11
rm -rf /usr/lib/libidn.so
ln -sf /usr/lib/libidn.so.11.6.8 /usr/lib/libidn.so

# String decoder
urldecode(){
  echo -e "$(sed 's/+/ /g;s/%0D//g;s/%/\\x/g')"
}

# Create DNS configuration files
dns="/etc/dnsmasq.conf"
hst="/etc/hosts.dnsmasq"

echo "domain-needed" > $dns
echo "bogus-priv"   >> $dns
echo "expand-hosts" >> $dns
echo "no-hosts"     >> $dns

host=$(grep "^host=" $cfg | cut -d'"' -f2)
echo $host | urldecode > $hst
echo "addn-hosts=$hst" >> $dns
domain=$(grep "^domain=" $cfg | cut -d'"' -f2)
if [ -n "$domain" ]; then
  echo "domain=$domain" >> $dns
  local=$(grep "^local=" $cfg | cut -d'"' -f2)
  if [ "$local" == "1" ]; then
    echo "local=/$domain/" >> $dns
  fi
fi
server=$(grep "^server=" $cfg | cut -d'"' -f2)
if [ -n "$server" ]; then
  echo $server | urldecode | sed 's/^/server=/g' >> $dns
fi

# Start service
enable=$(grep "^service=" $cfg | cut -d'"' -f2)
if [ "$enable" == "1" ]; then
  /etc/rc.d/rc.dnsmasq start >/dev/null
fi

# Update file access mode
chmod 600 $(awk '/(\.htm$|\.php$|\.js$|\.page$|\.css$|\.png$|\.gif$)/ {print "/"$0}' &log;/&plugin;-&version;-i486-1)

echo ""
echo "-----------------------------------------------------------"
echo " &plugin; has been installed."
echo " This plugin requires Dynamix webGui to operate"
echo " Copyright 2014, Bergware International"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""

# Remove this install file - we are done!
rm -f /tmp/plugin-install
</INLINE>
</FILE>

<FILE Name="&reg;/&plugin;">
<INLINE>
&plugin; v&version;
</INLINE>
</FILE>
</PLUGIN>